Console.Clear(); // Очистка консоли. Куда же без неё?

void FillArray(int[] collection) // Метод, который ничего не считает. Просто заполняет массив случайными числами от 1 до 10.
{
    int length = collection.Length; // Узнаём длинну массива.
    int index = 0; // Вводим счётчик индекса.
    while (index < length) // Пока индекс меньше длинны.
    {
        collection[index] = new Random().Next(1, 10); // Конкретный индекс заполняется случайным числом от 1 до 10.
        index++; // Перекидываем счётчик на один шаг вперёд.
    }
}

void PrintArray(int[] col) // Выписывает значения элементов массива на экран.
{
    int count = col.Length; // Задаём длинну массива.
    int position = 0; // Задаём стартовый индекс.
    while (position < count) // Пока индекс меньше длинны.
    {
        Console.WriteLine(col[position]); // Выписываем на экран значение элемента массива.
        position++; // Перекидываем счётчик на один шаг вперёд.
    }
}

int IndexOf(int[] collection, int find) // Функция, выдающая результат (ищет конкретный элемент массива).
{
    int count = collection.Length; // Задаём длинну массива.
    int index = 0; // 
    int position = -1;
    while (index < count) // Пока счётчик меньше длинны.
    {
        if (collection[index] == find) // Если искомое значение найдено.
        {
            position = index;
            break; // Прерывание цикла при первом же нахождении.
        }
        index++; // Перекидываем счётчик на один шаг вперёд.
    }
    return position; // Выдать индекс искомого.
}

int[] array = new int[10]; // Присвоение нового значения элементу массива.

FillArray(array); // Используем метод заполнения, описанный выше.
PrintArray(array); // Используем метод вывода значений элементов массива на экран.
Console.WriteLine(); // Пропускаем строчку, для удобочитаемости.

int pos = IndexOf(array,4); // Ищем индекс по числу при помощи метода выше. В нашем случае ищем число 4.
Console.WriteLine(pos); // Выдаём индекс найденного числа.