/**
 * | Задача 1_1.
 * | Создать package – animals. Работу продолжаем в нём.
 * | Создать абстрактный класс Animal с полями год рождения, вес, кол-во конечностей.
 * | Реализовать наследников класса Animal классы Lion и Snake,
 * | добавив к ним по одному доп. полю объем гривы и длина тела соответственно.
 * | *4.  Реализовать метод  кормления void feed(int foodWeight), после которого вес животного увеличивается.
 * 
 * | Задача 1_2.
 * | Создать в классе Lion и Snake статичные финальные поля MAX_WEIGHT и TYPE,
 * | на той же строке объявления присвоить им значения.
 * | Добавить логику в метод feed, чтобы животное не могло превысить свой максимальный вес. 
 * | *3. Реализовать логику так, чтобы метод feed находился в классе Animal и использовал внутри себя абстрактный метод.
 * 
 * | Задача 1_3.
 * | Создать package – cage. Работу продолжаем в нём.
 * | Создать интерфейс AnimalCage, который содержит абстрактные методы для:
 * | - Добавления в клетку животного.
 * | - Передачи корма в клетку.
 * | - Очистку клетки.
 * Создать для сущности Lion отдельный LionCage, реализующий интерфейс AnimalCage.
 * В клетке должна хранится информация о находящихся в ней львах и объем загрязнения клетки.
 * 
 * | Задача 2.
 * | Создать package – factory. Работу продолжаем в нём.
 * | Создать класс LionsFactory.
 * | Реализовать в нём статический метод для создания коллекции львов с определённым кол-вом в ней:
 * | ArrayList<Lion> createLions (int lionCount)
 * В методе main создать коллекцию львов и положить её содержимое в клетку.
 * Посмотрите состояние львов, покормите львов в клетке, проверьте изменился ли у них вес.
 * 
 * ДЗ.
 * Создать класс Wolf, наследника класса Animal.
 * Создать класс WolfCage, имплементирующий интерфейс AnimalCage
 * Добавить абстрактный метод в интерфейс AnimalCage, достающий первое попавшееся животное из клетки.
 * Все вышеуказанное создать согласно принципам ООП пройдённым на семинаре
 */


package Webinar_02.Example_01;

import java.util.ArrayList;

import Webinar_02.Example_01.animals.Lion;
import Webinar_02.Example_01.cage.LionCage;
import Webinar_02.Example_01.factory.LionsFactory;

public class Program {
    ArrayList<Lion> lions = LionsFactory.createLions(10);
}
